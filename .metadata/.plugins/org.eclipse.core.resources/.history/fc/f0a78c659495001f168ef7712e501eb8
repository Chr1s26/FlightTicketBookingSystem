package Dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import Model.User;
import util.DateConverter;

public class UserDaoImpl extends UserDao {
	
	private UserPolicyDaoImpl userPolicyDao;
	
	public UserDaoImpl() {
		this.userPolicyDao = new UserPolicyDaoImpl();
	}
	
	@Override
	public String getTableName() {
		return "users";
	}

	@Override
	public User convertToObject(ResultSet resultset) {
		User user = new User();
		try {
			user.setId(resultset.getInt("id"));
			user.setName(resultset.getString("username"));
			user.setEmail(resultset.getString("email"));
			user.setPasswordHash(resultset.getString("password_hash"));
			user.setPolicy(this.userPolicyDao.getById(resultset.getInt("policy_id")));
			user.setCreatedAt(DateConverter.toLocalDateTime(resultset.getTimestamp("created_at")));
			user.setUpdatedAt(DateConverter.toLocalDateTime(resultset.getTimestamp("updated_at")));
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return user;
	}

	@Override
	public String getInsertQuery() {
		return "insert into "+this.getTableName()+" (username,email,password_hash,policy_id) Values (?,?,?,?)";
	}

	@Override
	public String getUpdateQuery() {
		return "update "+this.getTableName()+ " set username = ?, email = ?, password_hash = ? policy_id = ? where id = ?";
	}

	@Override
	public void prepareParams(PreparedStatement preparedStatement, User user) {
		try {
			preparedStatement.setString(1, user.getName());
			preparedStatement.setString(2, user.getEmail());
			preparedStatement.setString(3,user.getPasswordHash());
			preparedStatement.setInt(4, user.getPolicy().getId() );
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}

	@Override
	public void prepareParamsForUpdate(PreparedStatement preparedStatement, User user) {
		try {
			preparedStatement.setString(1, user.getName());
			preparedStatement.setString(2, user.getEmail());
			preparedStatement.setString(3,user.getPasswordHash());
			preparedStatement.setInt(4, user.getPolicy().getId() );
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
}
